{"version":3,"file":"static/js/960.d19a77db.chunk.js","mappings":"uWAGaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAOtBC,GAAUH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kKAStBI,EAAUN,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gJASpBM,EAAQR,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uGAOpBQ,GAAQV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,qNAYrBW,GAAWb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAoBe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,6CAK/Bc,EAAahB,EAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,md,4ICtCjCgB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGF,aAG1BG,EAAW,CACfC,GAAI,GACJL,MAAO,GACPE,SAAU,IAGCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACEC,EAAAA,EAAAA,KAAC/B,EAAAA,GAAS,CAAAgC,UACRD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAeR,EACfS,SAde,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BT,GACEU,EAAAA,EAAAA,IAAM,CACJjB,MAAOc,EAAOd,MACdE,SAAUY,EAAOZ,YAGrBc,GACF,EAOME,iBAAkBrB,EAAOa,UAEzBS,EAAAA,EAAAA,MAACrC,EAAAA,GAAO,CAACsC,aAAa,MAAKV,SAAA,EACzBS,EAAAA,EAAAA,MAAClC,EAAAA,GAAO,CAAAyB,SAAA,EACND,EAAAA,EAAAA,KAACtB,EAAAA,GAAK,CAACkC,QAAQ,QAAOX,SAAC,YACvBD,EAAAA,EAAAA,KAACpB,EAAAA,GAAK,CAACiC,KAAK,QAAQC,KAAK,QAAQlB,GAAG,WACpCI,EAAAA,EAAAA,KAACjB,EAAAA,GAAQ,CAAC8B,KAAK,QAAQE,UAAU,YAGnCL,EAAAA,EAAAA,MAAClC,EAAAA,GAAO,CAAAyB,SAAA,EACND,EAAAA,EAAAA,KAACtB,EAAAA,GAAK,CAACkC,QAAQ,WAAUX,SAAC,eAC1BD,EAAAA,EAAAA,KAACpB,EAAAA,GAAK,CAACiC,KAAK,WAAWC,KAAK,WAAWlB,GAAG,cAC1CI,EAAAA,EAAAA,KAACjB,EAAAA,GAAQ,CAAC8B,KAAK,WAAWE,UAAU,YAEtCf,EAAAA,EAAAA,KAACd,EAAAA,GAAU,CAAC4B,KAAK,SAAQb,SAAC,iBAKpC,EC3De,SAASe,IACtB,OACEN,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACED,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAAAhB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,aAETD,EAAAA,EAAAA,KAACH,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 170px);\n`;\n\nexport const LogForm = styled(Form)`\n  padding: 20px;\n  width: 360px;\n  border: 2px solid #448585;\n  border-radius: 5px;\n  box-shadow: var(--mainBoxShadow);\n  background-color: #fff;\n`;\n\nexport const Section = styled.div`\n  margin-bottom: 30px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 24px;\n  color: var(--textColor);\n`;\n\nexport const Input = styled(Field)`\n  padding: 5px 10px;\n\n  font-size: 24px;\n  color: var(--textColor);\n\n  background-color: transparent;\n  border: 2px solid transparent;\n  border-radius: 5px;\n  box-shadow: var(--insetBoxShadow);\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-top: 7px;\n  color: red;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  padding: 10px 25px;\n  margin-left: auto;\n  margin-right: auto;\n\n  font-size: 18px;\n  font-weight: 600;\n  color: #e84a5f;\n\n  background-color: var(--itemBackgroundColor);\n  border-radius: 5px;\n  border: 2px solid #448585;\n  box-shadow: var(--mainBoxShadow);\n\n  cursor: pointer;\n\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    color: var(--accentTextColor);\n    background-color: var(--mainBackgroundColor);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Container,\n  ErrorMsg,\n  FormButton,\n  Input,\n  Label,\n  LogForm,\n  Section,\n} from './LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().min(7).required(),\n});\n\nconst inValues = {\n  id: '',\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={inValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <LogForm autoComplete=\"off\">\n          <Section>\n            <Label htmlFor=\"email\">Email:</Label>\n            <Input name=\"email\" type=\"email\" id=\"email\" />\n            <ErrorMsg name=\"email\" component=\"div\" />\n          </Section>\n\n          <Section>\n            <Label htmlFor=\"password\">Password:</Label>\n            <Input name=\"password\" type=\"password\" id=\"password\" />\n            <ErrorMsg name=\"password\" component=\"div\" />\n          </Section>\n          <FormButton type=\"submit\">Log in</FormButton>\n        </LogForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LogForm","Form","_templateObject2","Section","_templateObject3","Label","_templateObject4","Input","Field","_templateObject5","ErrorMsg","ErrorMessage","_templateObject6","FormButton","_templateObject7","schema","yup","shape","email","required","password","min","inValues","id","LoginForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","_ref","resetForm","logIn","validationSchema","_jsxs","autoComplete","htmlFor","name","type","component","Login","Helmet"],"sourceRoot":""}