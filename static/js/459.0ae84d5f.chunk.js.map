{"version":3,"file":"static/js/459.0ae84d5f.chunk.js","mappings":"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","sources":["components/App.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/contactForm/contactForm.styled.js","components/contactForm/contactForm.jsx","components/filter/filter.styled.js","components/filter/filter.jsx","components/contactList/contactList.styled.js","components/contactList/contactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  padding-bottom: 20px;\n  padding-top: 20px;\n  min-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--accentTextColor);\n  border: 2px solid var(--textColor);\n`;\n\nexport const FormHeader = styled.h2`\n  font-size: 30px;\n  color: var(--textColor);\n`;\n\nexport const Navigation = styled.nav`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const NavigationItem = styled(NavLink)`\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.contacts.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilters = state => state.contacts.filters;\n\n\nexport const selectfilteredContacts = createSelector(\n  [selectContact, selectFilters],\n  (contacts, filtered) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtered.toLowerCase())\n    );\n  }\n);\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const Container = styled(Form)`\n  margin-bottom: 20px;\n  padding: 20px;\n  width: 360px;\n  border: solid 2px var(--textColor);\n  border-radius: 5px;\n  background-color: var(--mainBackgroundColor);\n`;\n\nexport const Section = styled.div`\n  margin-bottom: 30px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--textColor);\n`;\n\nexport const Input = styled(Field)`\n  width: 95%;\n  padding: 5px 10px;\n\n  font-size: 18px;\n  color: var(--textColor);\n\n  background-color: transparent;\n  border: solid 2px var(--textColor);\n  border-radius: 5px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-top: 7px;\n  color: red;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  padding: 10px 25px;\n  margin-left: auto;\n  margin-right: auto;\n\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--accent-btn-color);\n\n  background-color: var(--itemBackgroundColor);\n  border-radius: 5px;\n  border: solid 2px var(--textColor);\n  box-shadow: var(--mainBoxShadow);\n\n  cursor: pointer;\n\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    color: var(--accentTextColor);\n    background-color: #138531;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { selectContact } from 'redux/contacts/selectors.js';\nimport { addContacts } from 'redux/contacts/operations.js';\nimport {\n  Container,\n  Input,\n  Label,\n  Section,\n  ErrorMsg,\n  FormButton,\n} from './contactForm.styled.js';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().min(7).required(),\n});\n\nconst inValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const onSubmit = newContact => {\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      toast.error(`${newContact.name} is already in contacts.`);\n    } else {\n    dispatch(addContacts(newContact));\n    }\n  };\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n    onSubmit(newContact);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={inValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Container autoComplete=\"off\">\n          <Section>\n            <Label htmlFor=\"name\">Name:</Label>\n            <Input\n              name=\"name\"\n              type=\"text\"\n              id=\"name\"\n              maxLength={14}\n              placeholder=\"Example: John Snow\"\n            />\n            <ErrorMsg name=\"name\" component=\"div\" />\n          </Section>\n\n          <Section>\n            <Label htmlFor=\"number\">Number:</Label>\n            <Input\n              name=\"number\"\n              type=\"tel\"\n              id=\"number\"\n              pattern=\"^\\d{3}-\\d{3}-\\d{4}$\"\n              placeholder=\"Example: 777-777-7777\"\n            />\n            <ErrorMsg name=\"number\" component=\"div\" />\n          </Section>\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Container>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 24px;\n  color: var(--textColor);\n  text-shadow: var(--insetBoxShadow);\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px 10px;\n  background-color: var(--mainBackgroundColor);\n  font-size: 24px;\n  color: var(--textColor);\n\n  border: solid 2px var(--textColor);\n  border-radius: 5px;\n  box-shadow: var(--insetBoxShadow);\n`;\n","import { FilterContainer, FilterInput, FilterLabel } from './filter.styled';\nimport { setFilter } from 'redux/filtersSlice/filtersSlice';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('')\n\nconst onFilter = event => {\n  const { value } = event.currentTarget;\n  setValue(value);\n  dispatch(setFilter(value));\n};\n\n  return (\n    <FilterContainer>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={value}\n        onChange={onFilter}\n      />\n    </FilterContainer>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  margin-top: 20px;\n  border: solid 2px var(--textColor);\n  border-radius: 5px;\n`;\n\nexport const ContactsList = styled.ul`\n  padding: 20px 20px 10px 20px;\n  margin: 0;\n  width: 360px;\n  border: solid 2px transparent;\n  border-radius: 5px;\n  list-style: inside;\n  background-color: var(--mainBackgroundColor);\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactsText = styled.p`\n  margin: 0;\n  font-size: large;\n  font-weight: 500;\n  color: var(--textColor);\n`;\n\nexport const ContactsBtn = styled.button`\n  display: flex;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--accent-btn-color);\n\n  background-color: var(--itemBackgroundColor);\n  border-radius: 5px;\n  border: solid 2px var(--textColor);\n  box-shadow: var(--mainBoxShadow);\n\n  cursor: pointer;\n\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    color: var(--accentTextColor);\n    background-color: var(--accent-btn-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectfilteredContacts,\n} from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport {\n  ContactsContainer,\n  ContactsList,\n  ContactsItem,\n  ContactsText,\n  ContactsBtn,\n} from './contactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const filteredContacts = useSelector(selectfilteredContacts);\n  const handleDelete = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <ContactsContainer>\n      {!isLoading && (\n        <ContactsList>\n          {filteredContacts.length > 0 ? (\n            filteredContacts.map(({ id, name, number }) => (\n              <ContactsItem key={id}>\n                <ContactsText>{name}: </ContactsText>\n                <ContactsText>{number}</ContactsText>\n                <ContactsBtn\n                  type=\"button\"\n                  id={id}\n                  onClick={() => handleDelete(id)}\n                >\n                  Delete\n                </ContactsBtn>\n              </ContactsItem>\n            ))\n          ) : (\n            <ContactsText>No contacts found.</ContactsText>\n          )}\n        </ContactsList>\n      )}\n    </ContactsContainer>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport {\n  selectContact,\n  selectError,\n  selectLoading,\n} from 'redux/contacts/selectors';\nimport { FormHeader, MainContainer } from 'components/App.styled';\nimport { ContactForm } from 'components/contactForm/contactForm';\nimport { Filter } from 'components/filter/filter';\nimport { ContactsText } from 'components/contactList/contactList.styled';\nimport { ContactList } from 'components/contactList/contactList';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContact);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <ToastContainer autoClose={2000} />\n      <FormHeader>Phonebook</FormHeader>\n      <ContactForm />\n      <FormHeader>Contacts</FormHeader>\n      <Filter />\n      {isLoading && <ContactsText>Loading contacts...</ContactsText>}\n      {error && <p>{error}</p>}\n      {contacts && <ContactList />}\n    </MainContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","FormHeader","_templateObject2","_templateObject3","NavLink","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","name","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","selectContact","state","contacts","items","selectLoading","isLoading","selectError","error","selectfilteredContacts","filters","filtered","filter","contact","toLowerCase","includes","Container","Form","Section","Label","Input","Field","ErrorMsg","ErrorMessage","_templateObject5","FormButton","_templateObject6","schema","yup","shape","required","number","min","inValues","id","ContactForm","dispatch","useDispatch","useSelector","_jsx","_Fragment","children","Formik","initialValues","onSubmit","values","_ref","resetForm","newContact","toast","addContacts","validationSchema","_jsxs","autoComplete","htmlFor","type","maxLength","placeholder","component","pattern","FilterContainer","FilterLabel","FilterInput","Filter","_useState","useState","_useState2","_slicedToArray","setValue","onChange","event","currentTarget","setFilter","ContactsContainer","ContactsList","ContactsItem","ContactsText","ContactsBtn","ContactList","filteredContacts","onClick","deleteContacts","handleDelete","useEffect","fetchContacts","ToastContainer","autoClose"],"sourceRoot":""}